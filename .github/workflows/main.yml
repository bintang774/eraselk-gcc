name: GCC+LLD Build

on:
  workflow_dispatch:
  watch:
    types: [started]

env:
  GITHUB_EMAIL: ${{ secrets.EMAIL }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  GITHUB_USER: ${{ secrets.USERNAME }}

jobs:
  build-arm64-tc:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set build date
      id: get-date
      run: |
        sudo ln -sf /usr/share/zoneinfo/Asia/Makassar /etc/localtime
        echo ::set-output name=date::$(/bin/date -u "+%Y%m%d")
    - name: Setup
      run: |
        sudo apt-get update -y
        sudo apt-get upgrade -y
        sudo apt-get install build-essential -y
        sudo apt-get install libmpfr-dev libgmp-dev libmpc-dev zlib1g-dev g++-multilib glibc-source binutils-dev g++ texinfo bison flex cmake ninja-build clang lld bzip2 binutils-arm-linux-gnueabi binutils-aarch64-linux-gnu file -y
    - name: Build
      run: |
        chmod a+x build-*.sh
        ./build-gcc.sh -a arm64gnu
        ./build-lld.sh -a arm64gnu
        script_dir=$(pwd)
        cd gcc-arm64
        ./bin/aarch64-elf-gcc -v 2>&1 | tee ../gcc-version
        ./bin/aarch64-elf-ld.lld -v 2>&1 | tee ../lld-arm64-version
        bash "$script_dir/strip-binaries.sh"
        cd ../ && cat lld-arm64-version >> gcc-version
    - name: Create tarball
      run: |
        tar -cvf eraselk-gcc-arm64-$(/bin/date -u '+%d%m%Y').xz gcc-arm64/*

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: aarch64-tarball
        path: |
          *.xz
          gcc-version
          
  publish-release:
    needs: [build-arm64-tc]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Restoring artifacts
        uses: actions/download-artifact@v2
        with:
          name: aarch64-tarball
          path: ${{ github.workspace }}
      - name: Release Tag
        id: release_tag
        run: echo "TAG_NAME='$(date -u +%d%m%Y)'" >> $GITHUB_ENV
      - name: Create Release
        run: |
          gh release create ${{ env.TAG_NAME }} -F aarch64-tarball/gcc-version */*.xz
